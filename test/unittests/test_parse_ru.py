#
# Copyright 2017 Mycroft AI Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
import unittest
from datetime import datetime, timedelta

from ovos_date_parser import (
    extract_duration, extract_datetime
)


class TestNormalize(unittest.TestCase):

    def test_extract_duration_ru(self):
        self.assertEqual(extract_duration("10 секунд"),
                         (timedelta(seconds=10.0), ""))
        self.assertEqual(extract_duration("5 минут"),
                         (timedelta(minutes=5), ""))
        self.assertEqual(extract_duration("2 часа"),
                         (timedelta(hours=2), ""))
        self.assertEqual(extract_duration("3 дня"),
                         (timedelta(days=3), ""))
        self.assertEqual(extract_duration("25 недель"),
                         (timedelta(weeks=25), ""))
        self.assertEqual(extract_duration("семь часов"),
                         (timedelta(hours=7), ""))
        self.assertEqual(extract_duration("7.5 секунд"),
                         (timedelta(seconds=7.5), ""))
        self.assertEqual(extract_duration("восемь с половиной дней "
                                          "тридцать девять секунд"),
                         (timedelta(days=8.5, seconds=39), ""))
        self.assertEqual(extract_duration("Установи таймер на 30 минут"),
                         (timedelta(minutes=30), "установи таймер на"))
        self.assertEqual(extract_duration("Четыре с половиной минуты до"
                                          " заката"),
                         (timedelta(minutes=4.5), "до заката"))
        self.assertEqual(extract_duration("девятнадцать минут через час"),
                         (timedelta(minutes=19), "через час"))
        # self.assertEqual(extract_duration("разбуди меня через три недели, "
        #                                   "четыреста девяносто семь дней "
        #                                   "и триста 91.6 секунд"),
        #                  (timedelta(weeks=3, days=497, seconds=391.6),
        #                   "разбуди меня через , a"))
        self.assertEqual(extract_duration("фильм один час пятьдесят семь"
                                          " и пол минуты длиной"),
                         (timedelta(hours=1, minutes=57.5),
                          "фильм   длиной"))
        self.assertEqual(extract_duration("10-секунд"),
                         (timedelta(seconds=10.0), ""))
        self.assertEqual(extract_duration("5-минут"),
                         (timedelta(minutes=5), ""))

    def test_extractdatetime_ru(self):
        def extractWithFormat(text):
            # Tue June 27, 2017 @ 1:04pm
            date = datetime(2017, 6, 27, 13, 4, tzinfo=default_timezone())
            [extractedDate, leftover] = extract_datetime(text, date)
            extractedDate = extractedDate.strftime("%Y-%m-%d %H:%M:%S")
            return [extractedDate, leftover]

        def testExtract(text, expected_date, expected_leftover):
            res = extractWithFormat(normalize(text))
            self.assertEqual(res[0], expected_date, "for=" + text)
            self.assertEqual(res[1], expected_leftover, "for=" + text)

        testExtract("теперь пора",
                    "2017-06-27 13:04:00", "пора")
        self.u = "секунду"
        testExtract("через %s" % self.u,
                    "2017-06-27 13:04:01", "")
        testExtract("через минуту",
                    "2017-06-27 13:05:00", "")
        testExtract("через две минуты",
                    "2017-06-27 13:06:00", "")
        # testExtract("через пару минут",
        #            "2017-06-27 13:06:00", "")
        testExtract("через два часа",
                    "2017-06-27 15:04:00", "")
        # testExtract("через пару часов",
        #            "2017-06-27 15:04:00", "")
        testExtract("через две недели",
                    "2017-07-11 00:00:00", "")
        # testExtract("через пару недель",
        #            "2017-07-11 00:00:00", "")
        testExtract("через два месяца",
                    "2017-08-27 00:00:00", "")
        testExtract("через два года",
                    "2019-06-27 00:00:00", "")
        # testExtract("через пару месяцев",
        #            "2017-08-27 00:00:00", "")
        # testExtract("через пару лет",
        #            "2019-06-27 00:00:00", "")
        testExtract("через десятилетие",
                    "2027-06-27 00:00:00", "")
        # testExtract("через пару десятилетий",
        #            "2037-06-27 00:00:00", "")
        testExtract("следующее десятилетие",
                    "2027-06-27 00:00:00", "")
        testExtract("через столетие",
                    "2117-06-27 00:00:00", "")
        testExtract("через тысячелетие",
                    "3017-06-27 00:00:00", "")
        # testExtract("через два десятилетия",
        #             "2037-06-27 00:00:00", "")
        # testExtract("через 5 десятилетий",
        #             "2067-06-27 00:00:00", "")
        # testExtract("через два века",
        #             "2217-06-27 00:00:00", "")
        # testExtract("через пару веков",
        #            "2217-06-27 00:00:00", "")
        # testExtract("через два тысячелетия",
        #             "4017-06-27 00:00:00", "")
        # testExtract("через две тысячи лет",
        #             "4017-06-27 00:00:00", "")
        # testExtract("через пару тысячелетий",
        #            "4017-06-27 00:00:00", "")
        # testExtract("через пару тысяч лет",
        #            "4017-06-27 00:00:00", "")
        testExtract("через год",
                    "2018-06-27 00:00:00", "")
        testExtract("хочу мороженое через час",
                    "2017-06-27 14:04:00", "хочу мороженое")
        testExtract("через 1 секунду",
                    "2017-06-27 13:04:01", "")
        testExtract("через 2 секунды",
                    "2017-06-27 13:04:02", "")
        testExtract("Установи таймер на 1 минуту",
                    "2017-06-27 13:05:00", "установи таймер")
        testExtract("Установи таймер на пол часа",
                    "2017-06-27 13:34:00", "установи таймер")
        # testExtract("Установи таймер на 5 дней с сегодня",
        #             "2017-07-02 00:00:00", "установи таймер")
        testExtract("послезавтра",
                    "2017-06-29 00:00:00", "")
        testExtract("после завтра",
                    "2017-06-29 00:00:00", "")
        testExtract("Какая погода послезавтра?",
                    "2017-06-29 00:00:00", "какая погода")
        testExtract("Напомни мне в 10:45 pm",
                    "2017-06-27 22:45:00", "напомни мне")
        testExtract("Напомни мне в 10:45 вечера",
                    "2017-06-27 22:45:00", "напомни мне")
        testExtract("какая погода в пятницу утром",
                    "2017-06-30 08:00:00", "какая погода")
        testExtract("какая завтра погода",
                    "2017-06-28 00:00:00", "какая погода")
        testExtract("какая погода сегодня днём",
                    "2017-06-27 15:00:00", "какая погода")
        testExtract("какая погода сегодня вечером",
                    "2017-06-27 19:00:00", "какая погода")
        testExtract("какая была погода сегодня утром",
                    "2017-06-27 08:00:00", "какая была погода")
        testExtract("напомни мне позвонить маме через 8 недель и 2 дня",
                    "2017-08-24 00:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме в августе 3",
                    "2017-08-03 00:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне завтра позвонить маме в 7am",
                    "2017-06-28 07:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне завтра позвонить маме в 7утра",
                    "2017-06-28 07:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне завтра позвонить маме в 10pm",
                    "2017-06-28 22:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне завтра позвонить маме в 7 вечера",
                    "2017-06-28 19:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне завтра позвонить маме в 10 вечера",
                    "2017-06-28 22:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне завтра позвонить маме в 7 часов вечера",
                    "2017-06-28 19:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне завтра позвонить маме в 10 часов вечера",
                    "2017-06-28 22:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме в 7am",
                    "2017-06-28 07:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме в 7утра",
                    "2017-06-28 07:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме через час",
                    "2017-06-27 14:04:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме в 1730",
                    "2017-06-27 17:30:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме в 0630",
                    "2017-06-28 06:30:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме в 06 30 часов",
                    "2017-06-28 06:30:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме в 06 30",
                    "2017-06-28 06:30:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме в 06 30 часа",
                    "2017-06-28 06:30:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме в 7 часов",
                    "2017-06-27 19:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме вечером в 7 часов",
                    "2017-06-27 19:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме  в 7 часов вечером",
                    "2017-06-27 19:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме в 7 часов утра",
                    "2017-06-28 07:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме в четверг вечером в 7 часов",
                    "2017-06-29 19:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме в четверг утром в 7 часов",
                    "2017-06-29 07:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме в 7 часов в четверг утром",
                    "2017-06-29 07:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме в 7:00 в четверг утром",
                    "2017-06-29 07:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме в 7:00 в четверг вечером",
                    "2017-06-29 19:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме в 8 вечера среды",
                    "2017-06-28 20:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме в 8 в среду вечером",
                    "2017-06-28 20:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме вечером среды в 8",
                    "2017-06-28 20:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме через два часа",
                    "2017-06-27 15:04:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме через 2 часа",
                    "2017-06-27 15:04:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме через 15 минут",
                    "2017-06-27 13:19:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме через пятнадцать минут",
                    "2017-06-27 13:19:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме через пол часа",
                    "2017-06-27 13:34:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме через четверть часа",
                    "2017-06-27 13:19:00", "напомни мне позвонить маме")
        # testExtract("напомни мне позвонить маме в 10am на 2 день после этой субботы",
        #             "2017-07-03 10:00:00", "напомни мне позвонить маме")
        testExtract("Слушайте музыку Рика Эстли через 2 дня с пятницы",
                    "2017-07-02 00:00:00", "слушайте музыку рика эстли")
        testExtract("Начать вторжение в 3:45 pm в четверг",
                    "2017-06-29 15:45:00", "начать вторжение")
        testExtract("Начать вторжение в 3:45 вечера в четверг",
                    "2017-06-29 15:45:00", "начать вторжение")
        testExtract("Начать вторжение в 3:45 дня в четверг",
                    "2017-06-29 15:45:00", "начать вторжение")
        testExtract("В понедельник закажи торт из пекарни",
                    "2017-07-03 00:00:00", "закажи торт из пекарни")
        testExtract("Включи музыку с днем рождения через 5 лет",
                    "2022-06-27 00:00:00", "включи музыку с днем рождения")
        testExtract("Скайп Маме в 12:45 pm в следующий четверг",
                    "2017-07-06 12:45:00", "скайп маме")
        testExtract("Скайп Маме в 12:45 дня в следующий четверг",
                    "2017-07-06 12:45:00", "скайп маме")
        testExtract("Какая погода в следующую пятницу?",
                    "2017-06-30 00:00:00", "какая погода")
        testExtract("Какая погода в следующую среду?",
                    "2017-07-05 00:00:00", "какая погода")
        testExtract("Какая погода в следующий четверг?",
                    "2017-07-06 00:00:00", "какая погода")
        testExtract("Какая погода в следующую пятницу утром",
                    "2017-06-30 08:00:00", "какая погода")
        testExtract("какая погода в следующую пятницу вечером",
                    "2017-06-30 19:00:00", "какая погода")
        testExtract("какая погода в следующую пятницу днём",
                    "2017-06-30 15:00:00", "какая погода")
        testExtract("какая погода в следующую пятницу в полдень",
                    "2017-06-30 12:00:00", "какая погода")
        testExtract("напомни мне позвонить маме третьего августа",
                    "2017-08-03 00:00:00", "напомни мне позвонить маме")
        # testExtract("купить фейерверк в 4 в четверг",
        #             "2017-07-04 00:00:00", "купить фейерверк")
        testExtract("какая погода через 2 недели со следующей пятницы",
                    "2017-07-14 00:00:00", "какая погода")
        testExtract("какая погода в среду в 0700 часов",
                    "2017-06-28 07:00:00", "какая погода")
        testExtract("Поставь будильник в среду в 7 часов",
                    "2017-06-28 07:00:00", "поставь будильник")
        testExtract("Назначь встречу в 12:45 pm в следующий четверг",
                    "2017-07-06 12:45:00", "назначь встречу")
        testExtract("Назначь встречу в 12:45 дня в следующий четверг",
                    "2017-07-06 12:45:00", "назначь встречу")
        testExtract("Какая погода в этот четверг?",
                    "2017-06-29 00:00:00", "какая погода")
        testExtract("назначь встречу через 2 недели и 6 дней с субботы",
                    "2017-07-21 00:00:00", "назначь встречу")
        testExtract("Начать вторжение в 03 45 в четверг",
                    "2017-06-29 03:45:00", "начать вторжение")
        testExtract("Начать вторжение в 800 часов в четверг",
                    "2017-06-29 08:00:00", "начать вторжение")
        testExtract("Начать вечеринку в 8 часов вечером в четверг",
                    "2017-06-29 20:00:00", "начать вечеринку")
        testExtract("Начать вторжение в 8 вечера в четверг",
                    "2017-06-29 20:00:00", "начать вторжение")
        testExtract("Начать вторжение в четверг в полдень",
                    "2017-06-29 12:00:00", "начать вторжение")
        testExtract("Начать вторжение в четверг в полночь",
                    "2017-06-29 00:00:00", "начать вторжение")
        testExtract("Начать вторжение в четверг в 0500",
                    "2017-06-29 05:00:00", "начать вторжение")
        testExtract("напомни мне встать через 4 года",
                    "2021-06-27 00:00:00", "напомни мне встать")
        testExtract("напомни мне встать через 4 года и 4 дня",
                    "2021-07-01 00:00:00", "напомни мне встать")
        # testExtract("какая погода 3 дня после завтра?",
        #             "2017-07-01 00:00:00", "какая погода")
        testExtract("3 декабря",
                    "2017-12-03 00:00:00", "")
        testExtract("мы встретимся в 8:00 сегодня вечером",
                    "2017-06-27 20:00:00", "мы встретимся")
        testExtract("мы встретимся в 5pm",
                    "2017-06-27 17:00:00", "мы встретимся")
        testExtract("мы встретимся в 5дня",
                    "2017-06-27 17:00:00", "мы встретимся")
        testExtract("мы встретимся в 8 am",
                    "2017-06-28 08:00:00", "мы встретимся")
        testExtract("мы встретимся в 8 утра",
                    "2017-06-28 08:00:00", "мы встретимся")
        testExtract("мы встретимся в 8 вечера",
                    "2017-06-27 20:00:00", "мы встретимся")
        testExtract("напомнить мне встать в 8 am",
                    "2017-06-28 08:00:00", "напомнить мне встать")
        testExtract("напомнить мне встать в 8 утра",
                    "2017-06-28 08:00:00", "напомнить мне встать")
        testExtract("какая погода во вторник",
                    "2017-06-27 00:00:00", "какая погода")
        testExtract("какая погода в понедельник",
                    "2017-07-03 00:00:00", "какая погода")
        testExtract("какая погода в эту среду",
                    "2017-06-28 00:00:00", "какая погода")
        testExtract("в четверг какая погода",
                    "2017-06-29 00:00:00", "какая погода")
        testExtract("в этот четверг какая погода",
                    "2017-06-29 00:00:00", "какая погода")
        testExtract("в прошлый понедельник какая была погода",
                    "2017-06-26 00:00:00", "какая была погода")
        testExtract("поставь будильник на среду вечером в 8",
                    "2017-06-28 20:00:00", "поставь будильник")
        testExtract("поставь будильник на среду в 3 часа дня",
                    "2017-06-28 15:00:00", "поставь будильник")
        testExtract("поставь будильник на среду в 3 часа утра",
                    "2017-06-28 03:00:00", "поставь будильник")
        testExtract("поставь будильник на среду утром в 7 часов",
                    "2017-06-28 07:00:00", "поставь будильник")
        testExtract("поставь будильник на сегодня в 7 часов",
                    "2017-06-27 19:00:00", "поставь будильник")
        testExtract("поставь будильник на этот вечер в 7 часов",
                    "2017-06-27 19:00:00", "поставь будильник")
        testExtract("поставь будильник на этот вечер в 7:00",
                    "2017-06-27 19:00:00", "поставь будильник")
        # testExtract("поставь будильник этим вечером в 7:00",
        #             "2017-06-27 19:00:00", "поставь будильник")
        testExtract("вечером 5 июня 2017 напомни мне позвонить маме",
                    "2017-06-05 19:00:00", "напомни мне позвонить маме")
        testExtract("обнови мой календарь утром свидание с юлиусом" +
                    " 4 марта",
                    "2018-03-04 08:00:00",
                    "обнови мой календарь свидание с юлиусом")
        testExtract("напомни мне позвонить маме в следующий вторник",
                    "2017-07-04 00:00:00", "напомни мне позвонить маме")
        # testExtract("напомни мне позвонить маме  3 недели",
        #             "2017-07-18 00:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме через 8 недель",
                    "2017-08-22 00:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме через 8 недель и 2 дня",
                    "2017-08-24 00:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме через 4 дня",
                    "2017-07-01 00:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме через 3 месяца",
                    "2017-09-27 00:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме через 2 года и 2 дня",
                    "2019-06-29 00:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме на следующей неделе",
                    "2017-07-04 00:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме в 10am в субботу",
                    "2017-07-01 10:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме в 10 утра в субботу",
                    "2017-07-01 10:00:00", "напомни мне позвонить маме")
        # testExtract("напомни мне позвонить маме в 10am в эту субботу",
        #             "2017-07-01 10:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме в 10 в следующую субботу",
                    "2017-07-01 10:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме в 10am в следующую субботу",
                    "2017-07-01 10:00:00", "напомни мне позвонить маме")
        testExtract("напомни мне позвонить маме в 10 утра в следующую субботу",
                    "2017-07-01 10:00:00", "напомни мне позвонить маме")
        # test yesterday
        testExtract("какой был день вчера",
                    "2017-06-26 00:00:00", "какой был день")
        testExtract("какой был день позавчера",
                    "2017-06-25 00:00:00", "какой был день")
        testExtract("я позавтракал вчера в 6",
                    "2017-06-26 06:00:00", "я позавтракал")
        testExtract("я позавтракал вчера в 6 am",
                    "2017-06-26 06:00:00", "я позавтракал")
        testExtract("я позавтракал вчера в 6 утра",
                    "2017-06-26 06:00:00", "я позавтракал")

        # Below two tests, ensure that time is picked
        # even if no am/pm is specified
        # in case of weekdays/tonight

        testExtract("поставь будильник на 9 в выходные",
                    "2017-06-27 21:00:00", "поставь будильник выходные")
        testExtract("на 8 сегодня вечером",
                    "2017-06-27 20:00:00", "")
        testExtract("на 8:30pm сегодня вечером",
                    "2017-06-27 20:30:00", "")
        testExtract("на 8:30вечера сегодня",
                    "2017-06-27 20:30:00", "")
        testExtract("на 8:30 вечера сегодня",
                    "2017-06-27 20:30:00", "")
        # Tests a time with ':' & without am/pm
        testExtract("поставь будильник сегодня вечером на 9:30",
                    "2017-06-27 21:30:00", "поставь будильник")
        testExtract("поставь будильник на 9:00 сегодня вечером",
                    "2017-06-27 21:00:00", "поставь будильник")
        # Check if it picks intent irrespective of correctness
        testExtract("поставь будильник в 9 часов сегодня вечером",
                    "2017-06-27 21:00:00", "поставь будильник")
        testExtract("напомни мне об игре сегодня вечером в 11:30",
                    "2017-06-27 23:30:00", "напомни мне об игре")
        testExtract("поставь будильник в 7:30 на выходных",
                    "2017-06-27 19:30:00", "поставь будильник на выходных")

        #  "# days <from X/after X>"
        testExtract("мой день рождения через 2 дня с сегодня",
                    "2017-06-29 00:00:00", "мой день рождения")
        testExtract("мой день рождения через 2 дня от сегодня",
                    "2017-06-29 00:00:00", "мой день рождения")
        testExtract("мой день рождения через 2 дня с завтра",
                    "2017-06-30 00:00:00", "мой день рождения")
        testExtract("мой день рождения через 2 дня от завтра",
                    "2017-06-30 00:00:00", "мой день рождения")
        # testExtract("напомни мне позвонить маме в 10am через 2 дня после следующей субботы",
        #             "2017-07-10 10:00:00", "напомни мне позвонить маме")
        testExtract("мой день рождения через 2 дня со вчера",
                    "2017-06-28 00:00:00", "мой день рождения")
        testExtract("мой день рождения через 2 дня от вчера",
                    "2017-06-28 00:00:00", "мой день рождения")

        #  "# days ago>"
        testExtract("мой день рождения был 1 день назад",
                    "2017-06-26 00:00:00", "мой день рождения был")
        testExtract("мой день рождения был 2 дня назад",
                    "2017-06-25 00:00:00", "мой день рождения был")
        testExtract("мой день рождения был 3 дня назад",
                    "2017-06-24 00:00:00", "мой день рождения был")
        testExtract("мой день рождения был 4 дня назад",
                    "2017-06-23 00:00:00", "мой день рождения был")
        testExtract("мой день рождения был 5 дней назад",
                    "2017-06-22 00:00:00", "мой день рождения был")
        testExtract("встретимся сегодня ночью",
                    "2017-06-27 22:00:00", "встретимся ночью")
        testExtract("встретимся позже ночью",
                    "2017-06-27 22:00:00", "встретимся позже ночью")
        testExtract("какая будет погода завтра ночью",
                    "2017-06-28 22:00:00", "какая будет погода ночью")
        testExtract("какая будет погода в следующий вторник ночью",
                    "2017-07-04 22:00:00", "какая будет погода ночью")

    def test_extract_ambiguous_time_ru(self):
        morning = datetime(2017, 6, 27, 8, 1, 2, tzinfo=default_timezone())
        evening = datetime(2017, 6, 27, 20, 1, 2, tzinfo=default_timezone())
        noonish = datetime(2017, 6, 27, 12, 1, 2, tzinfo=default_timezone())
        self.assertEqual(extract_datetime('кормление рыб'), None)
        self.assertEqual(extract_datetime('день'), None)
        # self.assertEqual(extract_datetime('сегодня'), None)
        self.assertEqual(extract_datetime('месяц'), None)
        self.assertEqual(extract_datetime('год'), None)
        self.assertEqual(extract_datetime(' '), None)
        self.assertEqual(
            extract_datetime('покормить рыб в 10 часов', morning)[0],
            datetime(2017, 6, 27, 10, 0, 0, tzinfo=default_timezone()))
        self.assertEqual(
            extract_datetime('покормить рыб в 10 часов', noonish)[0],
            datetime(2017, 6, 27, 22, 0, 0, tzinfo=default_timezone()))
        self.assertEqual(
            extract_datetime('покормить рыб в 10 часов', evening)[0],
            datetime(2017, 6, 27, 22, 0, 0, tzinfo=default_timezone()))

    def test_extract_relativedatetime_ru(self):
        def extractWithFormat(text):
            date = datetime(2017, 6, 27, 10, 1, 2, tzinfo=default_timezone())
            [extractedDate, leftover] = extract_datetime(text, date)
            extractedDate = extractedDate.strftime("%Y-%m-%d %H:%M:%S")
            return [extractedDate, leftover]

        def testExtract(text, expected_date, expected_leftover):
            res = extractWithFormat(normalize(text))
            self.assertEqual(res[0], expected_date, "for=" + text)
            self.assertEqual(res[1], expected_leftover, "for=" + text)

        testExtract("мы встретимся через 5 минут",
                    "2017-06-27 10:06:02", "мы встретимся")
        # testExtract("мы встретимся через 5минут",
        #             "2017-06-27 10:06:02", "мы встретимся")
        testExtract("мы встретимся через 5 секунд",
                    "2017-06-27 10:01:07", "мы встретимся")
        testExtract("мы встретимся через 1 час",
                    "2017-06-27 11:01:02", "мы встретимся")
        testExtract("мы встретимся через 2 часа",
                    "2017-06-27 12:01:02", "мы встретимся")
        testExtract("мы встретимся через 1 минуту",
                    "2017-06-27 10:02:02", "мы встретимся")
        testExtract("мы встретимся через 1 секунду",
                    "2017-06-27 10:01:03", "мы встретимся")
        # testExtract("мы встретимся через 5секунд",
        #             "2017-06-27 10:01:07", "мы встретимся")


if __name__ == "__main__":
    unittest.main()
